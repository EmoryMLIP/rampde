name: Full Test Suite

on:
  # Run weekly on Mondays at 2 AM UTC
  schedule:
    - cron: '0 2 * * 1'
  # Allow manual trigger
  workflow_dispatch:
  # Optionally run on push to main
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        pytorch-version: ["2.7.0", "2.8.0"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install PyTorch ${{ matrix.pytorch-version }} (CPU)
      run: |
        python -m pip install --upgrade pip
        pip install torch==${{ matrix.pytorch-version }} --index-url https://download.pytorch.org/whl/cpu

    - name: Install package and test dependencies
      run: |
        pip install -e ".[testing]"

    - name: Display installed versions
      run: |
        python --version
        python -c "import torch; print(f'PyTorch: {torch.__version__}')"
        python -c "import rampde; print(f'rampde: {rampde._version.__version__}')"
        python -c "import torchdiffeq; print(f'torchdiffeq: {torchdiffeq.__version__}')"

    - name: Run core unit tests
      env:
        RAMPDE_TEST_QUIET: 1
      run: |
        python -m pytest tests/core/test_odeint.py -v
        python -m pytest tests/core/test_dtype_preservation.py -v -k "cpu"
        python -m pytest tests/core/simple_gradient_test.py -v
        python -m pytest tests/core/test_ode_gradients_simple.py -v

    - name: Run comparison tests (with torchdiffeq)
      env:
        RAMPDE_TEST_QUIET: 1
      run: |
        python -m pytest tests/core/test_rampde.py -v -k "not cuda"
        python -m pytest tests/core/test_rampde_tuple.py -v -k "not cuda"

    - name: Run dtype preservation tests (CPU only)
      env:
        RAMPDE_TEST_QUIET: 1
      run: |
        python -m pytest tests/core/test_dtype_preservation.py -v -k "cpu"

    - name: Test package import and basic functionality
      run: |
        python -c "import torch; import torch.nn as nn; from rampde import odeint
        class SimpleFunc(nn.Module):
         def forward(self, t, y): return -y
        func = SimpleFunc()
        y0 = torch.tensor([1.0])
        t = torch.linspace(0, 1, 10)
        y = odeint(func, y0, t, method='euler')
        print(f'Solution shape: {y.shape}')
        print(f'Final value: {y[-1].item():.4f}')
        assert y.shape == (10, 1), 'Shape mismatch'
        print('âœ“ Basic functionality test passed!')"

  test-summary:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
    - name: Check test results
      run: |
        if [ "${{ needs.test.result }}" = "failure" ]; then
          echo "::error::Some tests failed in the matrix"
          exit 1
        elif [ "${{ needs.test.result }}" = "cancelled" ]; then
          echo "::warning::Tests were cancelled"
          exit 1
        else
          echo "All tests passed successfully!"
        fi
